openapi: 3.1.1
info:
  title: My Documents South API
  version: "2"

servers:
  - url: http://localhost:3000
    description: local server

paths:
  /roles:
    post:
      tags:
        - Roles
      summary: Создание роли
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        "200":
          description: Возвращает созданный объект
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
        "422":
          description: Некорректное тело запроса
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: Объект уже существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      tags:
        - Roles
      summary: Получение списка ролей
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/Role"
                  - type: 'null'

  /roles/{id}:
    get:
      tags:
        - Roles
      summary: Получение роли по Id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int
            example: 6
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
        "400":
          description: Некорректный Id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Объект с переданным Id не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /services:
    post:
      tags:
        - Services
      summary: Создание сервиса
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        "200":
          description: Возвращает созданный объект
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Service"
        "422":
          description: Некорректное тело запроса
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: Объект уже существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      tags:
        - Services
      summary: Получение списка сервисов
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: "#/components/schemas/Service"
                  - type: "null"

  /services/{id}:
    get:
      tags:
        - Services
      summary: Получение сервиса по id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int
            example: 6
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Service"
        "400":
          description: Некорректный Id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Объект с переданным Id не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /tariffs:
    post:
      summary: Создание тарифа
      tags: [Tariffs]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Созданный тариф
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tariff'
        "422":
          description: Некорректное тело запроса
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "409":
          description: Объект уже существует
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Получение списка тарифов
      tags: [Tariffs]
      responses:
        '200':
          description: Список тарифов
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/Tariff'
                  - type: "null"

  /tariffs/{id}:
    get:
      summary: Получиение тарифа по id
      tags: [Tariffs]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: int
      responses:
        '200':
          description: Тариф найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tariff'
        '404':
          description: Тариф не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "400":
          description: Некорректный id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Обновление тарифа по id
      tags: [Tariffs]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: int
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Обновлённый тариф
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tariff'
        '404':
          description: Тариф не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "400":
          description: Некорректный id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      summary: Удаление тарифа по id
      tags: [Tariffs]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: int
      responses:
        '200':
          description: Тариф успешно удалён
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int
                    example: 8
        '400':
          description: Неверный id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Тариф не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users/signup:
    post:
      summary: Регистрация пользователя
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "201":
          description: Пользователь успешно создан
        "409":
          description: Конфликт — пользователь уже существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "422":
          description: Некорректный JSON (invalid body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /users:
    get:
      summary: Получить список пользователей
      tags: [Users]
      responses:
        "200":
          description: Список пользователей
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/User'
                  - type: 'null'

  /users/{id}:
    get:
      summary: Получить пользователя по ID
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: int
      responses:
        "200":
          description: Найденный пользователь
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        "400":
          description: Некорректный ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Удалить пользователя по ID
      tags: [Users]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: int
      responses:
        "200":
          description: Пользователь удалён
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: int
        "400":
          description: Некорректный ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Пользователь не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Ошибка сервера при удалении
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
        timestamp:
          type: string
          example: 0001-01-01T00:00:01.00001+03:00

    Role:
      type: object
      properties:
        id:
          type: integer
          format: int
        name:
          type: string
        created_at:
          type: string
          example: 0001-01-01T00:00:01.00001+03:00
        updated_at:
          type: string
          example: 0001-01-01T00:00:01.00001+03:00

    Service: 
      type: object
      properties:
        id:
          type: integer
          format: int
        name:
          type: string
        created_at:
          type: string
          example: 0001-01-01T00:00:01.00001+03:00
        updated_at:
          type: string
          example: 0001-01-01T00:00:01.00001+03:00
    Tariff:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Standard
        created_at:
          type: string
          example: 2025-09-01T12:00:00Z
        updated_at:
          type: string
          nullable: true
          example: 2025-09-03T15:30:00Z
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Иван
        last_name:
          type: string
          example: Иванов
        middle_name:
          type: string
          example: Иванович
        email:
          type: string
          example: ivan@example.com
        phone:
          type: string
          example: "+79998887766"
        password:
          type: string
          example: "Passw0rd"
        inn:
          type: string
          example: "123456789012"
        snils:
          type: string
          example: "12345678901"
        tariff_id:
          type: integer
          example: 1
        tariff:
          #я немного не уверен, писать ref или type.на твое усмотрение
          $ref: '#/components/schemas/Tariff'
        created_at:
          type: string
          example: 2025-09-01T12:00:00Z
        updated_at:
          type: string
          nullable: true
          example: 2025-09-03T15:30:00Z
